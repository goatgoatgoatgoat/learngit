RFC 指的是用来制定HTTP协议技术标准的文档，Request for comments
HTTP是一种不保存状态，即无状态（stateless）因为这个特性，http不对之前发生过的请求和响应状态进行管理，也就是说，无法根据之前的状态对这次请求进行处理。假设要求登陆的web页面本身不能进行状态的管理（不记录已经登陆的状态）那么每次跳转新页面不是要再次登陆就是要在每次请求报文中附加参数来管理登录状态。很麻烦。为了解决这个问题，引进了cookie技术。cookie会根据从服务器端发送的响应报文内的一个叫做Set-Cookie的首部字段信息，通知客户端保存Cookie。当下次客户端再往该服务器发送请求事，客户端会自动在请求报文中加入Cookie值然后在发送出去。服务器端发现客户端送来的Cookie后，会去检查究竟是从哪一个客户端发送来的连接请求，然后对比服务器上的记录，最后得到之前的状态信息。
HTTP方法  
    GET获取资源  
    HOST传输实体主体 
    PUT方法用来传输文件。就像FTP协议的文件上传一样，要求在报文的主体中包含文件内容，然后保存道请求URI指定的位置。但是不带验证机制，一般不用。
    HEAD方法获得报文首部。基本和GET方法一样，不过不返回报文主体部分，一般用于确认URI的有效性以及资源更新的日期时间等。
    DELETE用来删除文件，与PUT相反，同时跟PUT一样不带验证机制，所以一般不用。
    OPTIONS是询问支持的方法。
    TRACE追踪路径，确认连接过程中发生的一系列操作。不过容易引起XST（跨站追踪）。基本不用
   
HTTP持久连接使得能够实现管线化发送

HTTP报文
  HTTP报文由第一个出现的空行（CR+LF)来划分。ASCII 13为回车，10为换行。即0x0d和0x0a
  
