HTTP首部
四种HTTP首部字段类型
	General Header Fields 通用首部字段 请求报文和响应报文两方都会使用的首部
	Request Header Fields 请求首部字段 从客户端向服务器发送请求报文时使用的首部。补充了请求的附加内容、客户端信息、响应内容相关优先级等信息
	Reponse Header Fields 响应首部字段 从服务器端向客户端返回响应时使用的首部。补充了响应的附加内容，也会要求客户端附加额外的内容信息
	Entity Header Fields  实体首部字段 针对请求报文和响应报文的实体部分使用的首部。补充了资源内容更新时间等与实体有关的信息

End-to-end 首部和 Hop-by-hop 首部
	End-to-end首部 端到端首部 分在此类别中的首部会转发给请求/响应对应的最终接收目标，且必须保存在由缓存生成的响应中，另外规定必须被转发
	Hop-by-hop首部 逐跳首部  分在此类别的首部只对单词转发有效，会因通过缓存或代理而不在转发。对于1.1或者更高的版本中，如果要使用hop-by-hop首部，需要提供Connection首部字段
逐跳首部枚举
	connection 
	keep-alive 
	proxy-authenticate 
	proxy-authorization 
	Trailer 
	TE 
	Transfer-encoding 
	Upgrade

通用首部字段
	cache-control 缓存控制
		Cache-Control: public 表示其他用户也可以利用缓存
		Cache-Control: private 缓存服务器会对改特定用户提供资源缓存的服务，对于其他用户发送过来的请求，代理服务器则不会返回缓存
		Cache-Control: no-cache 该指令目的是防止从个缓存中返回过期的资源。 
			请求中包含了该指令，缓存服务器就必须吧客户端请求转发给源服务器
			响应中包含了no-cache指令，缓存服务器也就不能再对资源进行缓存
		Cache-Control: no-store 该指令暗示请求（和对应的响应）或响应中包含机密信息。所以使用该指令规定缓存不能在本地存储请求或者响应的任一部分
		Cache-Control: max-age=数值（单位：秒） 
			请求中使用该指令后，缓存服务器缓存时间小于该数值的资源可以被客户端接收。当指定数值为0时，缓存服务器通常需要将请求转发给源服务器。
			响应中使用该指令后，缓存服务器将不再对该资源的有效性进行确认，指令中包含的数值就是缓存的最长时间。
		Cache-Control:min-fresh=数值（单位:秒） 使用该指令后，大于该数值的资源无法作为响应返回。
		Cache-Control:max-stale=数值（单位：秒） 要是使用这个指令，没有指定数值，那么不管过没过期，客户端都接收，要是指定了数值，只要小于这个数值，不管有没有过期，客户端都接收
		Cache-Control:only-if-cached 
			请求中使用这个指令表示客户端要求缓存服务器不重新加载响应，也不再次确认资源有效性，只返回本地缓存资源
			要是本地缓存无响应，那么返回状态码504 Gateway Timeout
		Cache-Control: must-revalidate 
			一般是由源服务器向代理发送该指令，使用must-revalidate指令，代理会向源服务器再次验证即将返回的资源是否有效。
			要是连不上源服务器，缓存会返回一条504 Gateway Timeout
			只要使用了must-revalidate，就会忽略max-stale
		Cache-Control:proxy-revalidate 要求所有缓存服务器必须都要再次验证
		Cache-Control:no-transform 禁止改变实体主体的媒体类型
		Cache-Control可扩展，也就是能够在后面跟上他没有的指令，不过前提是缓存服务器能够看懂
	Connection
		Connection可以控制逐跳字段 也就是说，connection后面写的东西，代理服务器会删掉再转发给源服务器
		一般默认连接都是持久连接，因此服务器要是想断开连接，就得指定Connection首部字段值为Close
	Date 表明创建HTTP报文的时间日期
	Pragma 是为了兼顾有些服务器而定义的，所以一般发送Cache-Control：no-cache 时候都会加一句Pragma：no-cache
	Trailer 是事先说明报文主体后记录了哪些首部字段。  hop-by-hop可用于分块编码时
	Transfer-Encoding 该首部字段规定了传输报文主体时采用的编码方式 HTTP/1.1的传输编码方式只对分块传输有效。也就是说一般都写作Transfer-Encoding：chunked
	Upgrade 这个首部字段一般用来检测HTTP协议以及其他协议是否可以使用更高的版本进行通信。
		如果是请求首部字段中出现了upgrade，意思是询问服务器是否支持upgrade后面的协议名称
		如果是响应首部字段中出现了upgrade，意思是向客户端表示自己能够支持upgrade后面的协议名称
		这是一个hop-by-hop首部字段，要是使用，必须加上一个Connection：Upgrade
		对于附有首部字段Upgrade的请求，服务器可以使用101Switching Protocols状态码作为响应返回
	Via 使用Via首部字段是为了追踪客户端与服务器之间的请求和响应的路径。
		代理服务器会向Via首部添加自身服务器的信息。包括版本信息HTTP1.0或者1.1
		Via首部是用来追踪路径的所以一般会跟TRACE一起使用，当服务器收到Max-Forwards=0时，就不再转发该请求了。这种情况下，服务器将自身信息添加到Via首部后，就会返回该请求的响应。
	Warning 首部格式：Warning： 【警告码】 【警告的主机：端口号】“【警告的内容】”（【日期时间】）  其中日期时间可以省略
	
请求首部字段
	Accept 该首部字段可以通知服务器，用户代理能够处理的媒体类型以及媒体类型的相关优先级。优先级用q来额外表示，用分号（；）进行分隔。权重值q的是0~1（可精确到小数点后三位），最大值为1。不指定默认为1.0。
	Accept-Charset 用来通知服务器用户代理支持的字符集和字符集的优先级
	Accept-Encoding 用来告知服务器用户代理支持的内容编码以及内容编码的优先级顺序
		gzip
		compress
		deflate
		identity：不执行压缩或者不会变化的默认编码格式。
	Accept-Language 告知服务器用户代理能够处理的自然语言以及自然语言的相对优先级
	Authorization 告知服务器用户代理的认证信息。通常想要通过服务器验证的用户在收到返回的401状态码响应后会把首部字段Authorization加入请求中
	Expect 客户端用首部字段Expect来告知服务器，期望出现的某种特定的行为。
	From 这个是用来告诉服务器用户代理的用户的电子邮箱。使用代理时应尽可能包含From首部字段，但是也有可能因为代理不同，将电子邮件地址记录在User-Agent首部字段内
	Host 首部字段会告知服务器，请求的资源所处的互联网主机名和端口号。
		Host首部字段是HTTP1.1规范内唯一必须包含在请求内的首部字段。
		请求被发送至服务器时，请求中的主机名字会用IP地址直接替换解决。但如果此时，相同的IP地址下部署运行着多个域名，那么服务器就会无法理解是哪个域名对应的请求。这就是Host存在的意义
		若服务器未设定主机名，那就直接发送一个空值。
	像If-xxx这种形式的请求首部字段，都可以称为条件请求。服务器在收到附带条件的请求后，只有判断指定条件为真时才会执行请求
		If-Match的值会与资源的ETag值进行匹配，若是相同，服务器返回200 OK状态码，若是不匹配，返回412 Precondition Failed
			可以使用星号（*）指定If-Match值，这样的情况，服务器忽略ETag的值，只要资源存在就处理请求
		If-Modified-Since 在指定值后服务器的资源都没有更新过，返回304 Not Modified状态码
			在指定值后服务器的资源更新过，则处理该请求
		If-None-Match 与If-Match作用相反，若是该首部字段的值与资源的ETag值不同，则处理请求。
			这个首部字段是用来获取最新的资源，因为资源更新过之后，ETag值会发生变化，所以ETag值不同，说明资源就更新了。
		If-Range 该首部字段后面的值与资源的ETag相匹配，若一致，则返回一致的内容，若不一致，则返回全部资源。
		If-Unmodified-Since 告知服务器指定的请求资源只有在指定值之后未发生更新才能处理请求
			若是发生了更新，则返回412 Precondition Failed状态码	
	Max-Forwards 通过TRACE或者OPTOINS方法，发送包含Max-Forwards的请求时，该字段一以十进制整数形式指定可经过的服务器的最大数目。当Max-Forwards值为0时，服务器不再进行转发，而是直接返回响应。
	Proxy-Authorization 接收到服务器发来的认证质询时，客户端会发送包含首部字段Porxy-Authorization的请求已告知服务器认证所需要的信息
	Range 例如Range： bytes=5001-10000 这个首部字段请求获取从第5001-10000字节的资源。
		服务器处理完范围请求会返回状态码为206 Partial Content的响应。
		如果不能处理这个范围请求，则会返回状态码200 OK和全部的资源
	Referer会告知服务器请求原始资源的URI

	TE会告知服务器 客户端能够使用的传输编码以及相对优先级。
		与Accept-Encoding相似但是TE是传输编码，Accept-Encoding则是内容编码
	User-Agent会将创建请求的浏览器和用户代理名称等信息传达给服务器。也有可能会加上网络爬虫作者的电子邮件地址

响应首部字段
	Accept-Ranges 能够处理范围请求时，会将其指定为bytes 
		不能处理范围请求时，指定为none
	Age 告诉客户端，源服务器多久之前创建了响应，单位值为秒	
		例如Age：600 
		创建该响应的是代理服务器 
		这个600的意思是600秒之前代理服务器向源服务器确认过该响应
		代理服务器创建响应时必须加上首部字段Age
	ETag 首部字段能告知客户端实体标识，是一种可以将资源以字符串形式作唯一性标识的方式
		ETag由服务器分配，每一份资源一个ETag值
		中文版与英文版URI相同但是ETag值不同
		每次更新ETag值都会发生改变
		分为强ETag值和弱ETag值
			强ETag值不论多么细微的变化多么细小的更新都会改变其值
			弱ETag值不发生根本性的变化不会改变，这时会在字段值最开始出附加W/
	